{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeric\\\\OneDrive\\\\Desktop\\\\Folders\\\\Programming\\\\Web\\\\amboysric\\\\client\\\\src\\\\Components\\\\Employees\\\\content.js\",\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles';\nimport Axios from 'axios'; //For Table\n\nimport { Table, TableBody, TableCell, TableContainer, TablePagination } from '@material-ui/core';\nimport { TableRow, Toolbar, Typography, Paper, Checkbox, IconButton, Tooltip } from '@material-ui/core'; //For Add Data (Modal)\n\nimport { Button, Dialog, DialogActions } from '@material-ui/core';\nimport { DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport Slide from '@material-ui/core/Slide'; //For Registered (Modal)\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport CloseIcon from '@material-ui/icons/Close'; //Icons\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add'; //Custom Import\n\nimport EnhancedTableHead from './table_head';\nimport createData from './data';\nimport stableSort from './stable_sort';\nimport getComparator from './comparator';\nimport AddForm from './form/form_content'; // Retrieve Data from DB\n// const rows = [\n//     createData(305, 'Cupcake', 3.7, 20.00, \"available\"),\n//     createData(452, 'Donut', 25.0, 20.00, \"available\"),\n//     createData(262, 'Eclair', 16.0, 20.00, \"not available\"),\n//     createData(159, 'Frozen yoghurt', 6.0, 20.00, \"available\"),\n//     createData(356, 'Gingerbread', 16.0, 20.00, \"not available\"),\n//     createData(408, 'Honeycomb', 3.2, 10, 20.00, \"not available\"),\n//     createData(237, 'Ice cream sandwich', 9.0, 20.00, \"out of stock\"),\n//     createData(375, 'Jelly Bean', 0.0, 20.00, \"available\"),\n//     createData(518, 'KitKat', 26.0, 20.00, \"out of stock\"),\n//     createData(392, 'Lollipop', 0.2, 20.00, \"out of stock\"),\n//     createData(318, 'Marshmallow', 0, 20.00, \"not available\"),\n//     createData(360, 'Nougat', 19.0, 20.00, \"not available\"),\n//     createData(437, 'Oreo', 18.0, 20.00, \"available\"),\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rows = [];\nAxios({\n  method: \"GET\",\n  withCredentials: true,\n  url: \"http://localhost:3001/users\"\n}).then(res => {\n  // console.log(res.data[0]);\n  res.data.map(data => {\n    rows.push(createData(data.employeeID, data.employeeLname + \" \" + data.employeeFname, data.employeeEmail, data.employeePassword, data.contactNo, data.jobTitle.toUpperCase()));\n  });\n});\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n}; //For Toolbar\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n})); //Modal Transition\n\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Transition;\n\nconst EnhancedTableToolbar = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; //For Adding Data in DB\n\n\n  const Modal = () => {\n    _s();\n\n    const [user, setUser] = React.useState({\n      empID: 0,\n      empLname: '',\n      empFname: '',\n      empEmail: '',\n      empPass: '',\n      contact: '',\n      job: 'waiter'\n    });\n\n    const handleChange = props => event => {\n      const forID = /^-?\\d*$/;\n\n      if (props == 'empID') {\n        if (event.target.value === '' || forID.test(event.target.value)) {\n          setProduct({ ...product,\n            'empID': event.target.value\n          });\n        }\n      } else {\n        setProduct({ ...product,\n          [props]: event.target.value\n        });\n      }\n    }; // Register\n\n\n    const add = () => {\n      Axios({\n        method: 'POST',\n        data: {\n          prodID: product.id,\n          prodName: product.prodName,\n          prodQuant: product.prodQuantity,\n          prodPrice: product.price,\n          prodStats: product.stats\n        },\n        withCredentials: true,\n        url: \"http://localhost:3001/add_inventory\"\n      }).then(res => {\n        handleClose();\n        alert(\"Product Added.\");\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        TransitionComponent: Transition,\n        keepMounted: true,\n        onClose: handleClose,\n        \"aria-labelledby\": \"alert-dialog-slide-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Please add the product truthfully and honestly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AddForm, {\n            product: product,\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: add,\n            color: \"primary\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(Modal, \"a1ZrjnO2iw5364VkLDo2P0tdRhg=\");\n\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [numSelected, \" selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Delete\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"delete\",\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Add Product\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"add product\",\n        children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n          onClick: handleClickOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(EnhancedTableToolbar, \"BEuMyvL7FgVT1SKiOqH6LJHedmE=\", false, function () {\n  return [useToolbarStyles];\n});\n\n_c3 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport default function Content() {\n  _s3();\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5); //Retrieve data from DB\n\n  console.log(rows);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        numSelected: selected.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-labelledby\": \"tableTitle\",\n          \"aria-label\": \"enhanced table\",\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            classes: classes,\n            numSelected: selected.length,\n            order: order,\n            orderBy: orderBy,\n            onSelectAllClick: handleSelectAllClick,\n            onRequestSort: handleRequestSort,\n            rowCount: rows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const isItemSelected = isSelected(row.name);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row.name),\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: isItemSelected,\n                    inputProps: {\n                      'aria-labelledby': labelId\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"none\",\n                  children: row.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.job\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 45\n                }, this)]\n              }, row.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(Content, \"PV6fjdz1ps3b37oVBfhl4LUUXhQ=\", false, function () {\n  return [useStyles];\n});\n\n_c4 = Content;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"EnhancedTableToolbar\");\n$RefreshReg$(_c4, \"Content\");","map":{"version":3,"sources":["C:/Users/jeric/OneDrive/Desktop/Folders/Programming/Web/amboysric/client/src/Components/Employees/content.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","withStyles","Axios","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","MuiDialogTitle","MuiDialogContent","MuiDialogActions","CloseIcon","DeleteIcon","AddIcon","EnhancedTableHead","createData","stableSort","getComparator","AddForm","rows","method","withCredentials","url","then","res","data","map","push","employeeID","employeeLname","employeeFname","employeeEmail","employeePassword","contactNo","jobTitle","toUpperCase","propTypes","classes","object","isRequired","numSelected","number","onRequestSort","func","onSelectAllClick","order","oneOf","orderBy","string","rowCount","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","Transition","forwardRef","props","ref","EnhancedTableToolbar","open","setOpen","useState","handleClickOpen","handleClose","Modal","user","setUser","empID","empLname","empFname","empEmail","empPass","contact","job","handleChange","event","forID","target","value","test","setProduct","product","add","prodID","id","prodName","prodQuant","prodQuantity","prodPrice","price","prodStats","stats","alert","useStyles","width","paper","marginBottom","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","Content","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","console","log","handleRequestSort","property","isAsc","handleSelectAllClick","checked","newSelecteds","n","name","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","isSelected","emptyRows","Math","min","row","index","isItemSelected","labelId","email","password"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Axios from 'axios';\r\n\r\n//For Table\r\nimport { Table, TableBody, TableCell, TableContainer, TablePagination } from '@material-ui/core'\r\nimport { TableRow, Toolbar, Typography, Paper, Checkbox, IconButton, Tooltip } from '@material-ui/core'\r\n\r\n//For Add Data (Modal)\r\nimport { Button, Dialog, DialogActions } from '@material-ui/core';\r\nimport { DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n//For Registered (Modal)\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n//Icons\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n//Custom Import\r\nimport EnhancedTableHead from './table_head';\r\nimport createData from './data';\r\nimport stableSort from './stable_sort';\r\nimport getComparator from './comparator';\r\nimport AddForm from './form/form_content';\r\n\r\n// Retrieve Data from DB\r\n// const rows = [\r\n//     createData(305, 'Cupcake', 3.7, 20.00, \"available\"),\r\n//     createData(452, 'Donut', 25.0, 20.00, \"available\"),\r\n//     createData(262, 'Eclair', 16.0, 20.00, \"not available\"),\r\n//     createData(159, 'Frozen yoghurt', 6.0, 20.00, \"available\"),\r\n//     createData(356, 'Gingerbread', 16.0, 20.00, \"not available\"),\r\n//     createData(408, 'Honeycomb', 3.2, 10, 20.00, \"not available\"),\r\n//     createData(237, 'Ice cream sandwich', 9.0, 20.00, \"out of stock\"),\r\n//     createData(375, 'Jelly Bean', 0.0, 20.00, \"available\"),\r\n//     createData(518, 'KitKat', 26.0, 20.00, \"out of stock\"),\r\n//     createData(392, 'Lollipop', 0.2, 20.00, \"out of stock\"),\r\n//     createData(318, 'Marshmallow', 0, 20.00, \"not available\"),\r\n//     createData(360, 'Nougat', 19.0, 20.00, \"not available\"),\r\n//     createData(437, 'Oreo', 18.0, 20.00, \"available\"),\r\n// ];\r\n\r\nconst rows = [];\r\nAxios({\r\n    method: \"GET\",\r\n    withCredentials: true,\r\n    url: \"http://localhost:3001/users\",\r\n}).then((res) => {\r\n    // console.log(res.data[0]);\r\n    res.data.map((data) => {\r\n        rows.push(\r\n            createData(\r\n                data.employeeID, data.employeeLname + \" \" + data.employeeFname, \r\n                data.employeeEmail, data.employeePassword, data.contactNo, data.jobTitle.toUpperCase()\r\n            )\r\n        );\r\n    });\r\n});\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\n//For Toolbar\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\n//Modal Transition\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //For Adding Data in DB\r\n    const Modal = () => {\r\n        const [user, setUser] = React.useState({\r\n            empID: 0,\r\n            empLname: '',\r\n            empFname: '',\r\n            empEmail: '',\r\n            empPass: '',\r\n            contact: '',\r\n            job: 'waiter',\r\n        });\r\n\r\n        const handleChange = (props) => (event) => {\r\n            const forID = /^-?\\d*$/;\r\n\r\n            if (props == 'empID') {\r\n                if (event.target.value === '' || forID.test(event.target.value)) {\r\n                    setProduct({ ...product, 'empID': event.target.value });\r\n                }\r\n            } else {\r\n                setProduct({ ...product, [props]: event.target.value });\r\n            }\r\n        };\r\n\r\n\r\n        // Register\r\n        const add = () => {\r\n            Axios({\r\n                method: 'POST',\r\n                data: {\r\n                    prodID: product.id,\r\n                    prodName: product.prodName,\r\n                    prodQuant: product.prodQuantity,\r\n                    prodPrice: product.price,\r\n                    prodStats: product.stats,\r\n                },\r\n                withCredentials: true,\r\n                url: \"http://localhost:3001/add_inventory\",\r\n            })\r\n                .then(res => {\r\n                    handleClose();\r\n                    alert(\"Product Added.\");\r\n                })\r\n        };\r\n\r\n        return (\r\n            <form>\r\n                <Dialog\r\n                    open={open}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">Add Product</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please add the product truthfully and honestly\r\n                        </DialogContentText>\r\n                        <AddForm\r\n                            product={product} handleChange={handleChange} />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={add} color=\"primary\">\r\n                            Add\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </form>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    Products\r\n                </Typography>\r\n            )}\r\n\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : (\r\n                <Tooltip title=\"Add Product\">\r\n                    <IconButton aria-label=\"add product\">\r\n                        <AddIcon onClick={handleClickOpen} />\r\n                        <Modal />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Content() {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('name');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    //Retrieve data from DB\r\n    console.log(rows);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <EnhancedTableToolbar numSelected={selected.length} />\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row.name)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.id}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                {row.id}\r\n                                            </TableCell>\r\n                                            <TableCell>{row.name}</TableCell>\r\n                                            <TableCell align=\"right\">{row.email}</TableCell>\r\n                                            <TableCell align=\"right\">{row.password}</TableCell>\r\n                                            <TableCell align=\"center\">{row.number}</TableCell>\r\n                                            <TableCell align=\"center\">{row.job}</TableCell>\r\n                                            <TableCell align=\"center\">Edit</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}