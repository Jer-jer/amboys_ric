{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeric\\\\OneDrive\\\\Desktop\\\\Folders\\\\Programming\\\\Web\\\\amboysric\\\\client\\\\src\\\\Components\\\\Login\\\\form_control.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { FormControl, InputLabel, Input, FormHelperText, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { InputAdornment, IconButton } from '@material-ui/core';\nimport { CheckBoxOutlineBlank } from '@material-ui/icons';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    width: '20ch'\n  }\n}));\nexport default function FormCont({\n  type,\n  label,\n  handle\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [showPass, setShowPass] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPass(!showPass);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  if (type == 'password') {\n    var subtext = /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        icon: /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlank, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this),\n        checkedIcon: /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 26\n        }, this),\n        name: \"checkedC\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 50\n      }, this),\n      label: \"Remember me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }, this);\n  } else {\n    var subtext = /*#__PURE__*/_jsxDEV(FormHelperText, {\n      id: \"my-helper-text\",\n      children: \"We'll never share your email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    className: clsx(classes.textField),\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: type == 'password' ? showPass ? 'text' : 'password' : type,\n      onChange: handle,\n      endAdornment: type == 'password' ? /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"end\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleClickShowPassword,\n          onMouseDown: handleMouseDownPassword,\n          children: showPass ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), subtext]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormCont, \"7c7NCwEo0ieevVBSCGqSpmKTe3U=\", false, function () {\n  return [useStyles];\n});\n\n_c = FormCont;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCont\");","map":{"version":3,"sources":["C:/Users/jeric/OneDrive/Desktop/Folders/Programming/Web/amboysric/client/src/Components/Login/form_control.js"],"names":["React","useState","useEffect","clsx","makeStyles","FormControl","InputLabel","Input","FormHelperText","FormControlLabel","Checkbox","InputAdornment","IconButton","CheckBoxOutlineBlank","CheckBoxIcon","Visibility","VisibilityOff","useStyles","theme","textField","width","FormCont","type","label","handle","classes","showPass","setShowPass","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","subtext"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles }  from '@material-ui/styles';\r\nimport { FormControl, InputLabel, Input, FormHelperText, FormControlLabel, Checkbox } from '@material-ui/core';\r\nimport { InputAdornment, IconButton } from '@material-ui/core';\r\nimport { CheckBoxOutlineBlank } from '@material-ui/icons';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {\r\n      width: '20ch',\r\n    },\r\n  }));\r\n\r\nexport default function FormCont({ type, label, handle }) {\r\n    const classes = useStyles();\r\n    const [showPass, setShowPass] = useState(false);\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPass(!showPass);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    if (type == 'password') {\r\n        var subtext = <FormControlLabel control={<Checkbox\r\n            icon={<CheckBoxOutlineBlank fontSize=\"small\" />}\r\n            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n            name=\"checkedC\"\r\n            color=\"primary\"\r\n        />}\r\n            label=\"Remember me\" />\r\n    } else {\r\n        var subtext = <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\r\n    }\r\n\r\n    return (\r\n        <FormControl className={clsx(classes.textField)}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <Input\r\n                type={type == 'password' ? (showPass ? 'text' : 'password') : type}\r\n                onChange={handle}\r\n                endAdornment={\r\n                    type == 'password' ? (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                            >\r\n                                {showPass ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ) : null\r\n                }\r\n            />\r\n            {subtext}\r\n        </FormControl>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}